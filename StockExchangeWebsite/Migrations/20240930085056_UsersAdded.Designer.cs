// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using StockExchangeWebsite.Data.AppDbContext;

#nullable disable

namespace StockExchangeWebsite.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240930085056_UsersAdded")]
    partial class UsersAdded
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("StockExchangeWebsite.Models.Company", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ContactPhone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateOnly>("FoundationDate")
                        .HasColumnType("date");

                    b.Property<string>("LogoURL")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumWorkers")
                        .HasColumnType("int");

                    b.Property<string>("RegistrationAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Sector")
                        .HasColumnType("int");

                    b.Property<int>("TickerId")
                        .HasColumnType("int");

                    b.Property<double>("Value")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("Companies");
                });

            modelBuilder.Entity("StockExchangeWebsite.Models.StockMarket", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("AllowsShortSelling")
                        .HasColumnType("bit");

                    b.Property<double>("CircuitBreakerThreshold")
                        .HasColumnType("float");

                    b.Property<TimeSpan>("ClosingTime")
                        .HasColumnType("time");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Currency")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("HasCircuitBreakers")
                        .HasColumnType("bit");

                    b.Property<double>("Liquidity")
                        .HasColumnType("float");

                    b.Property<double>("MarketCapitalization")
                        .HasColumnType("float");

                    b.Property<int>("MarketDepth")
                        .HasColumnType("int");

                    b.Property<string>("MarketIndex")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MinimumOrderSize")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<TimeSpan>("OpeningTime")
                        .HasColumnType("time");

                    b.Property<string>("RegulatoryAuthority")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SettlementPeriod")
                        .HasColumnType("int");

                    b.Property<string>("SupportedOrderTypes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("TickSize")
                        .HasColumnType("float");

                    b.Property<string>("TradingDays")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("TransactionFee")
                        .HasColumnType("float");

                    b.Property<float>("Volatility")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.ToTable("StockMarkets");
                });

            modelBuilder.Entity("StockExchangeWebsite.Models.StockMarketTicker", b =>
                {
                    b.Property<int>("StockMarketId")
                        .HasColumnType("int");

                    b.Property<int>("TickerId")
                        .HasColumnType("int");

                    b.HasKey("StockMarketId", "TickerId");

                    b.HasIndex("TickerId");

                    b.ToTable("StockMarketTickers");
                });

            modelBuilder.Entity("StockExchangeWebsite.Models.Ticker", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double>("CloseValue")
                        .HasColumnType("float");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<double>("CurrentValue")
                        .HasColumnType("float");

                    b.Property<double>("OpenValue")
                        .HasColumnType("float");

                    b.Property<string>("Symbol")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("TradingVolume")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId")
                        .IsUnique();

                    b.ToTable("Tickers");
                });

            modelBuilder.Entity("StockExchangeWebsite.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("StockExchangeWebsite.Models.UserTicker", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("TickerId")
                        .HasColumnType("int");

                    b.HasKey("UserId", "TickerId");

                    b.HasIndex("TickerId");

                    b.ToTable("UserTickers");
                });

            modelBuilder.Entity("StockExchangeWebsite.Models.StockMarketTicker", b =>
                {
                    b.HasOne("StockExchangeWebsite.Models.StockMarket", "StockMarket")
                        .WithMany("StockMarketTickers")
                        .HasForeignKey("StockMarketId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StockExchangeWebsite.Models.Ticker", "Ticker")
                        .WithMany("StockMarketTickers")
                        .HasForeignKey("TickerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("StockMarket");

                    b.Navigation("Ticker");
                });

            modelBuilder.Entity("StockExchangeWebsite.Models.Ticker", b =>
                {
                    b.HasOne("StockExchangeWebsite.Models.Company", "Company")
                        .WithOne("Ticker")
                        .HasForeignKey("StockExchangeWebsite.Models.Ticker", "CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");
                });

            modelBuilder.Entity("StockExchangeWebsite.Models.UserTicker", b =>
                {
                    b.HasOne("StockExchangeWebsite.Models.Ticker", "Ticker")
                        .WithMany("UserTickers")
                        .HasForeignKey("TickerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StockExchangeWebsite.Models.User", "User")
                        .WithMany("UserTickers")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ticker");

                    b.Navigation("User");
                });

            modelBuilder.Entity("StockExchangeWebsite.Models.Company", b =>
                {
                    b.Navigation("Ticker")
                        .IsRequired();
                });

            modelBuilder.Entity("StockExchangeWebsite.Models.StockMarket", b =>
                {
                    b.Navigation("StockMarketTickers");
                });

            modelBuilder.Entity("StockExchangeWebsite.Models.Ticker", b =>
                {
                    b.Navigation("StockMarketTickers");

                    b.Navigation("UserTickers");
                });

            modelBuilder.Entity("StockExchangeWebsite.Models.User", b =>
                {
                    b.Navigation("UserTickers");
                });
#pragma warning restore 612, 618
        }
    }
}
